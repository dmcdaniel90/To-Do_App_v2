{"mappings":"ACAA,EAAE,UAAU,KAAA,CAAM,WAKhB,SAAS,IACP,IAAM,EAAO,EAAE,cAAc,GAA7B,EAEI,AAAS,CAAA,KAAT,GACF,EAAE,aAAa,MAAA,CACb,CAAC,6DAA6D,EAiF3D,AAhFD,EAgFQ,MAAA,CAAO,GAAG,WAAA,GAAgB,AAhFlC,EAgFyC,KAAA,CAAM,GA/E/C,oIAAoI,CAAC,EAGzI,EAAE,cAAc,GAAA,CAAI,IACpB,IACA,EAAE,cAAc,KAAhB,KAEA,EAAE,cAAc,KAAhB,GAEA,EAAE,cAAc,IAAA,CAAK,cAAe,wBACpC,EAAE,cAAc,GAAA,CAAI,kBAAmB,wBACvC,EAAE,cAAc,GAAA,CAAI,QAAS,SAE7B,WAAW,WACT,EAAE,cAAc,IAAA,CAAK,cAAe,qBACpC,EAAE,cAAc,GAAA,CAAI,QAAS,SAC7B,EAAE,cAAc,GAAA,CAAI,kBAAmB,QACzC,EAAG,KAEP,CAwCA,SAAS,IACP,IAAM,EAAW,EAAE,aAAa,IAAhC,GACA,aAAa,OAAA,CAAQ,WAAY,EACnC,CAxEA,EAAE,cAAc,KAAhB,GA6FA,EAAE,kBAAkB,EAAA,CAAG,QAAS,GAChC,EAAE,aAAa,EAAA,CAAG,QAAS,UA9D3B,WACE,EAAE,IAAI,EAAE,MAAA,GAAS,MAAjB,GACA,EAAE,cAAc,KAAhB,GACA,GACF,GA2DA,EAAE,aAAa,EAAA,CAAG,QAAS,YAxD3B,WACE,EAAE,IAAI,EAAE,MAAA,GAAS,WAAA,CAAY,YAE7B,IACA,EAAE,cAAc,KAAhB,EACF,GAoDA,EAAE,mBAAmB,EAAA,CAAG,QAjDxB,WACE,EAAE,aAAa,KAAf,GACA,IACA,EAAE,cAAc,KAAhB,EACF,GA8CA,EAAE,yBAAyB,EAAA,CAAG,QA3C9B,WACE,EAAE,aAAa,MAAf,GACA,IACA,EAAE,cAAc,KAAhB,EACF,GAwCA,EAAE,wBAAwB,EAAA,CAAG,QArC7B,WACE,AAAqC,mBAArC,EAAE,wBAAwB,IAAA,GACtB,EAAE,wBAAwB,IAAA,CAAK,kBAC/B,EAAE,wBAAwB,IAAA,CAAK,kBACnC,EAAE,aAAa,MAAf,EACF,GAmCA,EAAE,cAAc,QAAA,CAAS,SAAU,CAAC,EAClB,KAAZ,EAAE,KAAA,EACJ,GAEJ,GAEA,AAhCA,WACE,IAAM,EAAW,aAAa,OAAA,CAAQ,YACtC,EAAE,aAAa,IAAA,CAAK,GAGpB,EAAE,aAAa,IAAA,CAAK,WACd,EAAE,IAAI,EAAE,QAAA,CAAS,aACnB,EAAE,IAAI,EAAE,QAAA,CAAS,aAAa,IAAA,CAAK,UAAW,CAAA,EAElD,EACF,GAuBF,GAYA,AATA,WACE,IAAM,EAAO,IAAI,KACX,EAAM,EAAK,OAAjB,GACM,EAAQ,EAAK,QAAA,GAAa,EAC1B,EAAO,EAAK,WAAlB,GAEA,EAAE,gBAAgB,IAAA,CAAK,CAAC,SAAS,EAAE,EAAM,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,CAAC,CAC3D","sources":["<anon>","src/assets/js/main.js"],"sourcesContent":["var $7940365cce7a5f46$exports = {};\n$(document).ready(function() {\n    //focus on the taskInput field when the page loads\n    $(\"#taskInput\").focus();\n    //function to add a new task\n    function addTask() {\n        const task = $(\"#taskInput\").val();\n        if (task !== \"\") {\n            $(\"#taskList\").append(`<li class=\"taskItem\"><input type=\"checkbox\" class=\"checkbox\">${capitalizeFirstLetter(task)}<input type=\"date\" class=\"form-control-sm\" id=\"dueDate\" name=\"dueDate\" placeholder=\"Due Date\"><button class=\"delete\">X</button></li>`);\n            $(\"#taskInput\").val(\"\");\n            updateStorage();\n            $(\"#taskInput\").focus();\n        } else {\n            $(\"#taskInput\").focus();\n            $(\"#taskInput\").attr(\"placeholder\", \"Please enter a task!\");\n            $(\"#taskInput\").css(\"backgroundColor\", \"rgba(255, 0, 0, 0.3)\");\n            $(\"#taskInput\").css(\"color\", \"white\");\n            setTimeout(function() {\n                $(\"#taskInput\").attr(\"placeholder\", \"Add a new task...\");\n                $(\"#taskInput\").css(\"color\", \"black\");\n                $(\"#taskInput\").css(\"backgroundColor\", \"white\");\n            }, 1000);\n        }\n    }\n    //function to remove a task\n    function removeTask() {\n        $(this).parent().remove();\n        $(\"#taskInput\").focus();\n        updateStorage();\n    }\n    //function to toggle a task as complete\n    function toggleComplete() {\n        $(this).parent().toggleClass(\"complete\");\n        updateStorage();\n        $(\"#taskInput\").focus();\n    }\n    //function to clear all tasks\n    function clearAll() {\n        $(\"#taskList\").empty();\n        updateStorage();\n        $(\"#taskInput\").focus();\n    }\n    //function to clear completed tasks\n    function clearCompleted() {\n        $(\".complete\").remove();\n        updateStorage();\n        $(\"#taskInput\").focus();\n    }\n    //function to toggle show/hide completed tasks\n    function toggleCompletedTasks() {\n        $(\"#toggleShowCompleted\").text() === \"Show Completed\" ? $(\"#toggleShowCompleted\").text(\"Hide Completed\") : $(\"#toggleShowCompleted\").text(\"Show Completed\");\n        $(\".complete\").toggle();\n    }\n    //function to update local storage with task list\n    function updateStorage() {\n        const taskList = $(\"#taskList\").html();\n        localStorage.setItem(\"taskList\", taskList);\n    }\n    //function to load task list from local storage\n    function loadStorage() {\n        const taskList = localStorage.getItem(\"taskList\");\n        $(\"#taskList\").html(taskList);\n        //if any items have a class of complete, check the checkbox\n        $(\".taskItem\").each(function() {\n            if ($(this).hasClass(\"complete\")) $(this).children(\".checkbox\").prop(\"checked\", true);\n        });\n    }\n    //function to auto capitalize first letter of task\n    function capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    //event handlers\n    $(\"#addTaskButton\").on(\"click\", addTask);\n    $(\"#taskList\").on(\"click\", \".delete\", removeTask);\n    $(\"#taskList\").on(\"click\", \".checkbox\", toggleComplete);\n    $(\"#clearAllButton\").on(\"click\", clearAll);\n    $(\"#clearCompletedButton\").on(\"click\", clearCompleted);\n    $(\"#toggleShowCompleted\").on(\"click\", toggleCompletedTasks);\n    //if taskInput has focus and enter is pressed, add task\n    $(\"#taskInput\").keypress(function(e) {\n        if (e.which === 13) addTask();\n    });\n    loadStorage();\n});\n//a function to get the current date and display it in the footer\nfunction $7940365cce7a5f46$var$displayDate() {\n    const date = new Date();\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    $(\"#currentDate\").text(`Today is ${month}/${day}/${year}`);\n}\n$7940365cce7a5f46$var$displayDate();\n\n\n//# sourceMappingURL=index.8c6e234b.js.map\n","$(document).ready(function () {\n  //focus on the taskInput field when the page loads\n  $('#taskInput').focus();\n\n  //function to add a new task\n  function addTask() {\n    const task = $('#taskInput').val();\n\n    if (task !== '') {\n      $('#taskList').append(\n        `<li class=\"taskItem\"><input type=\"checkbox\" class=\"checkbox\">${capitalizeFirstLetter(\n          task\n        )}<input type=\"date\" class=\"form-control-sm\" id=\"dueDate\" name=\"dueDate\" placeholder=\"Due Date\"><button class=\"delete\">X</button></li>`\n      );\n\n      $('#taskInput').val('');\n      updateStorage();\n      $('#taskInput').focus();\n    } else {\n      $('#taskInput').focus();\n\n      $('#taskInput').attr('placeholder', 'Please enter a task!');\n      $('#taskInput').css('backgroundColor', 'rgba(255, 0, 0, 0.3)');\n      $('#taskInput').css('color', 'white');\n\n      setTimeout(function () {\n        $('#taskInput').attr('placeholder', 'Add a new task...');\n        $('#taskInput').css('color', 'black');\n        $('#taskInput').css('backgroundColor', 'white');\n      }, 1000);\n    }\n  }\n\n  //function to remove a task\n  function removeTask() {\n    $(this).parent().remove();\n    $('#taskInput').focus();\n    updateStorage();\n  }\n\n  //function to toggle a task as complete\n  function toggleComplete() {\n    $(this).parent().toggleClass('complete');\n\n    updateStorage();\n    $('#taskInput').focus();\n  }\n\n  //function to clear all tasks\n  function clearAll() {\n    $('#taskList').empty();\n    updateStorage();\n    $('#taskInput').focus();\n  }\n\n  //function to clear completed tasks\n  function clearCompleted() {\n    $('.complete').remove();\n    updateStorage();\n    $('#taskInput').focus();\n  }\n\n  //function to toggle show/hide completed tasks\n  function toggleCompletedTasks() {\n    $('#toggleShowCompleted').text() === 'Show Completed'\n      ? $('#toggleShowCompleted').text('Hide Completed')\n      : $('#toggleShowCompleted').text('Show Completed');\n    $('.complete').toggle();\n  }\n\n  //function to update local storage with task list\n  function updateStorage() {\n    const taskList = $('#taskList').html();\n    localStorage.setItem('taskList', taskList);\n  }\n\n  //function to load task list from local storage\n  function loadStorage() {\n    const taskList = localStorage.getItem('taskList');\n    $('#taskList').html(taskList);\n\n    //if any items have a class of complete, check the checkbox\n    $('.taskItem').each(function () {\n      if ($(this).hasClass('complete')) {\n        $(this).children('.checkbox').prop('checked', true);\n      }\n    });\n  }\n\n  //function to auto capitalize first letter of task\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  //event handlers\n  $('#addTaskButton').on('click', addTask);\n  $('#taskList').on('click', '.delete', removeTask);\n  $('#taskList').on('click', '.checkbox', toggleComplete);\n  $('#clearAllButton').on('click', clearAll);\n  $('#clearCompletedButton').on('click', clearCompleted);\n  $('#toggleShowCompleted').on('click', toggleCompletedTasks);\n\n  //if taskInput has focus and enter is pressed, add task\n  $('#taskInput').keypress(function (e) {\n    if (e.which === 13) {\n      addTask();\n    }\n  });\n\n  loadStorage();\n});\n\n//a function to get the current date and display it in the footer\nfunction displayDate() {\n  const date = new Date();\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n\n  $('#currentDate').text(`Today is ${month}/${day}/${year}`);\n}\n\ndisplayDate();\n"],"names":["$","document","ready","addTask","task","val","append","string","charAt","toUpperCase","slice","updateStorage","focus","attr","css","setTimeout","taskList","html","localStorage","setItem","on","parent","remove","toggleClass","empty","text","toggle","keypress","e","which","loadStorage","getItem","each","hasClass","children","prop","$7940365cce7a5f46$var$displayDate","date","Date","day","getDate","month","getMonth","year","getFullYear"],"version":3,"file":"index.8c6e234b.js.map"}